#include <iostream>
#include <string>


class Double
{
public:
	double var;
};

class Employee
{
private:
	int number;
	float investment;
public:
	void get_data(int num, float invest);
	void print_data();
};

class date
{
private:
	int day, month, year;
public:
	void get_date(int d, int m, int y);
	void show_date();
};

class Time
{
private:

public:
	Time()
	{
		/*std::cout << "Default initialization.\n";*/
		time = "00:00:00";
	}
	Time(std::string recived) 
	{
		/*std::cout << "Pre-initialized variables.\n";*/
		time = recived;
	}
	void show_time();
	void time_comb(std::string a, std::string b);


	int hours, minutes, seconds;
	std::string time;
};

class Expanded_employee
{
public:
	std::string etype;
	std::string date;
	void get_employ();
	void put_employ();
private:
	int number;
	long double salary;
};


void Employee::get_data(int num, float invest)
{
	number = num;
	investment = invest;
}

void Employee::print_data()
{
	std::cout << "Номер сотрудника: " << number << std::endl;
	std::cout << "Вклад сотрудника: " << investment << std::endl;
}

void date::get_date(int d, int m, int y)
{
	day = d;
	month = m;
	year = y;
}

void date::show_date()
{
	std::cout << "Дата: " << day << "/" << month << "/" << year << std::endl;
}

void Time::show_time()
{
	std::cout << "Time is: " << hours << ":" << minutes << ":" << seconds << std::endl;
}

void Time::time_comb(std::string ar, std::string br)
{
	int h1, h2, m1, m2, s1, s2;
	h1 = std::stoi(ar.substr(0, 2));
	m1 = std::stoi(ar.substr(3, 5));
	s1 = std::stoi(ar.substr(6, 8));

	h2 = std::stoi(br.substr(0, 2));
	m2 = std::stoi(br.substr(3, 5));
	s2 = std::stoi(br.substr(6, 8));
	hours = h1 + h2;
	minutes = m1 + m2;
	if (minutes >= 60)
	{
		minutes -= 60;
		hours++;
	}
	seconds = s1 + s2;
	if (seconds >= 60)
	{
		seconds -= 60;
		minutes++;
	}
}

void Expanded_employee::get_employ()
{
	bool loop = true;
	std::cout << "Введите данные о сотруднике: \n";
	std::cout << "Введите дату приема сотрудника на работу в формате (дд.мм.гггг): ";
	std::cin >> date;
	//char x;
	//while (loop)
	//{
	//	std::cout << "Введите должность: ";
	//	std::cin >> x;
	//	switch (x)
	//	{
	//	case 'L':
	//		std::cout << "Lab Assistant\n";
	//		loop = 0;
	//		etype = x;
	//		break;
	//	case 'C':
	//		std::cout << "Cheif\n";
	//		loop = 0;
	//		etype = x;
	//		break;
	//	case 'A':
	//		std::cout << "Assistant\n";
	//		loop = 0;
	//		etype = x;
	//		break;
	//	default:
	//		std::cout << "Выбранное значение отсутсвует в реестре!\n";
	//		std::cout << "Пожалуйста выберите другое из дотсупных.";
	//		std::cout << "Доступные значения: 'L', 'C', 'A'";
	//		break;
	//	}
	//}
	std::cout << "Введите должность: ";
	std::cin >> etype;
	std::cout << "Номер сотрудника: ";
	std::cin >> number;
	std::cout << "Введите Оклад сотрудника: ";
	std::cin >> salary;
	std::cout << "------------------------------" << std::endl;
}

void Expanded_employee::put_employ()
{
	std::cout << "Сотрудник #" << number << std::endl;
	std::cout << "Дата начала работы: " << date << "\n";
	std::cout << "Оклад: " << salary << std::endl;
	std::cout << "Должность: " << etype << std::endl;
	std::cout << "------------------------------" << std::endl;
}



void exercise_1()
{
	Double d, d1, d2;
	d.var = 0;
	std::cout << d.var << std::endl;
	std::cout << "Введите значение для инициализации переменной: ";
	std::cin >> d.var;
	std::cout << "d.var = " << d.var << std::endl;
	std::cout << "Введите 2 занчения для складывания в классе через пробел: ";
	std::cin >> d1.var >> d2.var;
	d.var = d1.var + d2.var;
	std::cout << "d.var = d1.var + d2.var => d.var = " << d.var << std::endl;
}

void exercise_2()
{
	Employee e1, e2, e3;
	int x;
	float y;
	std::cout << "Введите номер сотрудника: ";
	std::cin >> x;
	std::cout << "Введите размер вклада: ";
	std::cin >> y;
	e1.get_data(x, y);

	std::cout << "Введите номер сотрудника: ";
	std::cin >> x;
	std::cout << "Введите размер вклада: ";
	std::cin >> y;
	e2.get_data(x, y);

	std::cout << "Введите номер сотрудника: ";
	std::cin >> x;
	std::cout << "Введите размер вклада: ";
	std::cin >> y;
	e3.get_data(x, y);

	std::cout << "e1: \n";
	e1.print_data();
	std::cout << "e2: \n";
	e2.print_data();
	std::cout << "e3: \n";
	e3.print_data();
}

void exercise_3()
{
	date d;
	int day = 0, month = 0, year = 0;
	std::cout << "Введщите дату через пробел (пример:дд мм гггг): ";
	std::cin >> day >> month >> year;
	d.get_date(day, month, year);
	d.show_date();
}

void exercise_4()
{
	std::string a;
	std::string b;
	std::cout << "Введите время в формате 00:00:00: ";
	std::cin >> a;
	std::cout << "Введите время в формате 00:00:00: ";
	std::cin >> b;
	Time t, t1(a), t2(b);
	t.time_comb(t1.time, t2.time);
	t.show_time();
}

void exercise_5()
{
	Expanded_employee ee1;
	ee1.get_employ();
	ee1.put_employ();
}

bool next()
{
	char answer;
	bool loop = true;
	while (loop)
	{
		std::cout << "Желаете продолжить? (y/n)\n";
		std::cin >> answer;
		if (answer == 'n' or answer == 'N')
		{
			return false;
		}
		else if (answer == 'y' or answer == 'Y')
		{
			return true;
		}
		else
		{
			std::cout << "Введенно не верное значение, введите 'y' or 'n' для продолжения.\n";
		}
	}
}

void choice()
{
	int x;
	bool loop = true;
	while (loop)
	{
		std::cout << "Введите номер задания от 1-5 или 0 для завершения программы: ";
		std::cin >> x;
		if (x == 1)
		{
			exercise_1();
			loop = next();
		}
		else if (x == 2)
		{
			exercise_2();
			loop = next();
		}
		else if (x == 3)
		{
			exercise_3();
			loop = next();
		}
		else if (x == 4)
		{
			exercise_4();
			loop = next();
		}
		else if (x == 5)
		{
			exercise_5();
			loop = next();
		}
		else if (x == 0)
		{
			loop = false;
		}
		else
		{
			std::cout << "Выбранного задания не существует. Выберите другое!\n";
		}
	}
	std::cout << "Завершение программы.\n";
}

int main()
{
	setlocale(LC_ALL, "Russian");
	choice();
}
