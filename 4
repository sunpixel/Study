#include <iostream>
#include <string>
#include <tuple>

int hms_to_secs()
{
	long totalsecs;
	int hours, minutes, seconds;
	std::string time;
	std::cout << "Введите время в формате '00:00:00': ";
	std::cin >> time;
	hours = std::stoi(time.substr(0, 2));
	minutes = std::stoi(time.substr(3, 5));
	seconds = std::stoi(time.substr(6, 8));
	totalsecs = hours * 3600 + minutes * 60 + seconds;
	return totalsecs;
}

void excersise_1()
{
	int loop = 5, tot_secs;
	while (loop)
	{
		tot_secs = hms_to_secs();
		std::cout << "Всего секунд: " << tot_secs << std::endl;
		loop--;
	}
}

std::string secs_to_time(long totalsecs)
{
	std::string time;
	int seconds, minutes, hours;
	seconds = totalsecs % 3600 % 60;
	minutes = totalsecs % 3600 / 60;
	hours = totalsecs / 3600;
	time += std::to_string(hours);
	time += ":";
	time += std::to_string(minutes);
	time += ":";
	time += std::to_string(seconds);
	return time;
}

void excersise_2()
{
	std::cout << secs_to_time(hms_to_secs() + hms_to_secs()) << std::endl;
}

std::tuple<int, int> swap (int a, int b)
{
	return std::make_tuple(b, a);
}

void excersise_3()
{
	int x, y;
	std::cout << "Введите 1-ое значение: ";
	std::cin >> x;
	std::cout << "Введите 2-ое значение: ";
	std::cin >> y;
	std::tie(x, y) = swap(x, y);
	std::cout << x << " | " << y << std::endl;
}

std::tuple<std::string, std::string> swap_string(std::string a, std::string b)
{
	return std::make_tuple(b, a);
}

void excersise_4()
{
	std::string time1, time2;
	std::cout << "Введите время в формате '00:00:00': ";
	std::cin >> time1;
	std::cout << "Введите время в формате '00:00:00': ";
	std::cin >> time2;
	std::tie(time1, time2) = swap_string(time1, time2);
	std::cout << time1 << " | " << time2 << std::endl;
}

void excersise_5()
{

}

bool next()
{
	char answer;
	bool loop = true;
	while (loop)
	{
		std::cout << "Желаете продолжить? (y/n)\n";
		std::cin >> answer;
		if (answer == 'n' or answer == 'N')
		{
			return false;
		}
		else if (answer == 'y' or answer == 'Y')
		{
			return true;
		}
		else
		{
			std::cout << "Введенно не верное значение, введите 'y' or 'n' для продолжения.\n";
		}
	}
}

void choice()
{
	int x;
	bool loop = true;
	while (loop)
	{
		std::cout << "Введите номер задания от 1-5 или 0 для завершения программы: ";
		std::cin >> x;
		if (x == 1)
		{
			excersise_1();
			loop = next();
		}
		else if (x == 2)
		{
			excersise_2();
			loop = next();
		}
		else if (x == 3)
		{
			excersise_3();
			loop = next();
		}
		else if (x == 4)
		{
			excersise_4();
			loop = next();
		}
		else if (x == 5)
		{

			loop = next();
		}
		else if (x == 0)
		{
			loop = false;
		}
		else
		{
			std::cout << "Выбранного задания не существует. Выберите другое!\n";
		}
	}
	std::cout << "Завершение программы.\n";
}

int main()
{
	setlocale(LC_ALL, "Russian");
	choice();
}
#include <iostream>
#include <string>
#include <tuple>

int hms_to_secs()
{
	long totalsecs;
	int hours, minutes, seconds;
	std::string time;
	std::cout << "Введите время в формате '00:00:00': ";
	std::cin >> time;
	hours = std::stoi(time.substr(0, 2));
	minutes = std::stoi(time.substr(3, 5));
	seconds = std::stoi(time.substr(6, 8));
	totalsecs = hours * 3600 + minutes * 60 + seconds;
	return totalsecs;
}

void excersise_1()
{
	int loop = 5, tot_secs;
	while (loop)
	{
		tot_secs = hms_to_secs();
		std::cout << "Всего секунд: " << tot_secs << std::endl;
		loop--;
	}
}

std::string secs_to_time(long totalsecs)
{
	std::string time;
	int seconds, minutes, hours;
	seconds = totalsecs % 3600 % 60;
	minutes = totalsecs % 3600 / 60;
	hours = totalsecs / 3600;
	time += std::to_string(hours);
	time += ":";
	time += std::to_string(minutes);
	time += ":";
	time += std::to_string(seconds);
	return time;
}

void excersise_2()
{
	std::cout << secs_to_time(hms_to_secs() + hms_to_secs()) << std::endl;
}

std::tuple<int, int> swap (int a, int b)
{
	return std::make_tuple(b, a);
}

void excersise_3()
{
	int x, y;
	std::cout << "Введите 1-ое значение: ";
	std::cin >> x;
	std::cout << "Введите 2-ое значение: ";
	std::cin >> y;
	std::tie(x, y) = swap(x, y);
	std::cout << x << " | " << y << std::endl;
}

std::tuple<std::string, std::string> swap_string(std::string a, std::string b)
{
	return std::make_tuple(b, a);
}

void excersise_4()
{
	std::string time1, time2;
	std::cout << "Введите время в формате '00:00:00': ";
	std::cin >> time1;
	std::cout << "Введите время в формате '00:00:00': ";
	std::cin >> time2;
	std::tie(time1, time2) = swap_string(time1, time2);
	std::cout << time1 << " | " << time2 << std::endl;
}

void excersise_5()
{

}

bool next()
{
	char answer;
	bool loop = true;
	while (loop)
	{
		std::cout << "Желаете продолжить? (y/n)\n";
		std::cin >> answer;
		if (answer == 'n' or answer == 'N')
		{
			return false;
		}
		else if (answer == 'y' or answer == 'Y')
		{
			return true;
		}
		else
		{
			std::cout << "Введенно не верное значение, введите 'y' or 'n' для продолжения.\n";
		}
	}
}

void choice()
{
	int x;
	bool loop = true;
	while (loop)
	{
		std::cout << "Введите номер задания от 1-5 или 0 для завершения программы: ";
		std::cin >> x;
		if (x == 1)
		{
			excersise_1();
			loop = next();
		}
		else if (x == 2)
		{
			excersise_2();
			loop = next();
		}
		else if (x == 3)
		{
			excersise_3();
			loop = next();
		}
		else if (x == 4)
		{
			excersise_4();
			loop = next();
		}
		else if (x == 5)
		{

			loop = next();
		}
		else if (x == 0)
		{
			loop = false;
		}
		else
		{
			std::cout << "Выбранного задания не существует. Выберите другое!\n";
		}
	}
	std::cout << "Завершение программы.\n";
}

int main()
{
	setlocale(LC_ALL, "Russian");
	choice();
}
